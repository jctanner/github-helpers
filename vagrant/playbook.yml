- name: priviledged tasks
  hosts: all
  gather_facts: True
  sudo: True
  tasks:
    - apt: 
        pkg: "{{ item }}" 
        state: present
      with_items:
        - git
        - gcc
        - g++
        - python-virtualenv
        - python-dev
        - python-yaml
        - xvfb
        - python-matplotlib
        - libfreetype6-dev
        - libpng12-dev
        - libblas-dev
        - liblapack-dev
        - libatlas-dev
        - gfortran
        - python-scipy
      tags:
        - system
      when: ansible_distribution in ('Ubuntu', 'Debian')

    - yum:
        pkg: "{{ item }}"
        state: present
      with_items:
        - git
        - gcc
        - gcc-c++
        - python-virtualenv
        - python-devel
        - PyYAML
        - xorg-x11-server-Xvfb
        - libselinux-python
        - python-matplotlib
        - pygtk2
        - freetype-devel
        - libpng-devel
        - blas
        - blas-devel
        - scipy
      tags:
        - system
      when: ansible_distribution in ['RedHat', 'CentOS', 'ScientificLinux', 'Fedora']

    - selinux: state=disabled
      tags:
        - system
      when: ansible_distribution in ['RedHat', 'CentOS', 'ScientificLinux', 'Fedora']

- name: unpriviledged tasks
  hosts: all
  gather_facts: False
  vars:
    - githubuser: NONE
    - githubpass: NONE
  tasks:

    # NOTE: gcc fails to build numpy if memory <2GB
    - name: install requisite pylibs
      pip:
        name: "{{ item }}"
        virtualenv: ~/statsapp        
        virtualenv_site_packages: yes
        state: latest
      with_items:
        - argparse
        - pygithub
        - epdb
        - requests
        - requests_cache
        - distribute
        - matplotlib
        - numpy
        - scipy
        - pandas
      tags:
        - application

    - name: install the correct version of cement
      pip:
        name: cement
        version: 2.0.2
        virtualenv: ~/statsapp
        virtualenv_site_packages: yes
      tags:
        - application

    - name: create the config file
      template: 
        src: githubcfg.j2
        dest: ~/github.cfg
      tags:
        - application

    - name: fetch the app
      git:
        repo: https://github.com/jctanner/github-helpers
        dest: ~/github-helpers
        update: yes
      tags:
        - application

    - name: install/reinstall the app              
      shell: 
        free_form: source ~/statsapp/bin/activate ; cd ~/github-helpers/GitHubHelpers ; ./reinstall.sh
        executable: /bin/bash
      tags:
        - application

- name: report execution
  hosts: all
  gather_facts: False
  vars:
    activate: '~/statsapp/bin/activate'
    repo: "{{ GITHUB_REPO | default('jctanner/issuetests') }}"
    username: "{{ GITHUB_USERNAME | default('NONE') }}"
    password: "{{ GITHUB_PASSWORD | default('NONE') }}"
    outputdir: "{{ GITHUB_OUTPUTDIR | default('/tmp') }}"
  tasks:

    - name: run the graph script
      script: graphscript.sh "{{ activate }}" "{{ username }}" "{{ password }}" "{{ repo }}" "{{ outputdir }}"
      tags:
        - graphs

# ansible-playbook -vvvv -i vagrant_ansible_inventory_default playbook.yml -u vagrant -t report -e "GITHUB_USERNAME=____ GITHUB_PASSWORD=____ GITHUB_REPO=___/___"


# bash reportscript.sh ~/statsapp/bin/activate jctanner <PASSWORD> ansible/ansible /tmp/test
