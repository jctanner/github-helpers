#!/usr/bin/python
from cement.core import controller, backend, foundation, hook
from github.issues import GithubIssues
import epdb

# define an application base controller
class IssuesBaseController(controller.CementBaseController):
    class Meta:
        label = 'base'
        description = "My Application does amazing things!"
        epilog = "This is the text at the bottom of --help."

        config_defaults = dict(
            foo='bar',
            some_other_option='my default value',
            )

        arguments = [
            (['--no-cache'], dict(action='store_true', help='ignore requests cache')),
            (['--closed'], dict(action='store_true', help='closed tickets instead of open')),
            (['--html'], dict(action='store_true', help='output in html format')),
            (['-r', '--repo'], dict(action='store', help='github repo url')),
            (['-s', '--sort-key'], dict(action='store', 
                    help='sortby issue property keyname')),
            (['--username'], dict(action='store', help='github username')),
            (['--password'], dict(action='store', help='github password')),
            ]


    @controller.expose(hide=True, aliases=['run'])
    def default(self):
        self.log.info('Inside base.default function.')
        if self.pargs.foo:
            self.log.info("Recieved option 'foo' with value '%s'." % \
                          self.pargs.foo)

    @controller.expose(help="show all issues")
    def showall(self):
        gh = GithubIssues(cli=self)
        #gh.display(sort_by=self.pargs.sort_key)
        gh.show_all()

    @controller.expose(help="show all pull requests")
    def showprs(self):
        gh = GithubIssues(cli=self)
        gh.show_pr_sorted(sort_by=self.pargs.sort_key)
        #gh.show_all()

    @controller.expose(help="show all pull requests sorted file filepath")
    def showprfiles(self):
        gh = GithubIssues(cli=self)
        gh.show_pr_by_file()

    @controller.expose(help="show all pull requests with merge commits")
    def showprmergecommits(self):
        gh = GithubIssues(cli=self)
        gh.show_pr_merge_commits()

    @controller.expose(help="show all closed issues")
    def showclosed(self):
        gh = GithubIssues(cli=self)
        #gh.display(sort_by=self.pargs.sort_key)
        gh.show_closed()

    @controller.expose(help="list sortable keys for issues")
    def showkeys(self):
        gh = GithubIssues(cli=self)
        gh.show_closed()


app = foundation.CementApp('issues', base_controller=IssuesBaseController)
#app = foundation.CementApp('issues', config_files=['~/test.cfg'],  
#                            base_controller=IssuesBaseController)

try:
    app.setup()
    app.config.parse_file('~/test.cfg')
    app.run()
finally:
    app.close()

